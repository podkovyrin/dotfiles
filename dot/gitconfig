# set your user tokens as environment variables, such as ~/.secrets
# See the README for examples.
[init]
	defaultBranch = main
[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = blue
  frag = magenta bold
  old = red
  new = green
  diff = true
[alias]
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  nuke = !git clean -df && git reset --hard
  
  bclean = "!f() { git branch --merged | grep  -v '\\*\\|master\\|develop\\|main\\|dev' | xargs -n 1 git branch -d; }; f"

  subs = submodule update --init --recursive

  changelog = "!f() { git log $1..HEAD --pretty=\"format:%s%n%b\" | grep changelog: | /usr/bin/sed -e \"s/^.*changelog\\://\" | awk \"{\\$1=\\$1};1\"; }; f"
  
  aic = "!f() { if [ -n \"$(git diff --cached)\" ]; then git commit -m \"$(git diff --cached | llm -m llama3:70b 'Below is a diff of all staged changes, coming from the command:\\n```\\ngit diff --cached\\n```\\nPlease generate a concise, one-line commit message for these changes. Omit minor changes and emphasize the most important changes. OUTPUT ONLY THE MESSAGE.')\"; else echo 'No changes to commit'; fi }; f"

[format]
  pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[mergetool]
  prompt = false
[mergetool "vimdiff"]
  cmd="vim -c 'Gdiff' $MERGED"     # use fugitive.vim for 3-way merge
  keepbackup=false
[merge]
  summary = true
  verbosity = 1
  tool = vimdiff
  conflictstyle = diff3
[apply]
  whitespace = nowarn
[branch]
  autosetupmerge = true
	sort = -committerdate
[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = upstream
	autoSetupRemote = true
	followTags = true
[core]
  autocrlf = false
  editor = vim
  excludesfile = ~/.gitignore
	fsmonitor = true
	untrackedCache = true
[advice]
  statusHints = false
[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
	mnemonicPrefix = true
	algorithm = histogram
	colorMoved = plain
	renames = true
[rerere]
  # Remember my merges
  # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true
	autoupdate = true
[include]
  path = .gitconfig.user
[fetch]
	prune = true
	pruneTags = true
	all = true
[remote "origin"]
  prune = true
[user]
	name = Andrei Podkovyrin
	email = podkovyrin@gmail.com
[filter "lfs"]
[commit]
  gpgsign = true

[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path = 
[mergetool "sourcetree"]
  cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[rebase]
	updateRefs = true
[pull]
  ff = only
	rebase = true
[help]
	autocorrect = prompt

# git-delta config

# [core]
#   pager = delta
# [interactive]
#   diffFilter = delta --color-only
# [delta]
#   navigate = true    # use n and N to move between diff sections
#   # delta detects terminal colors automatically; set one of these to disable auto-detection
#   # dark = true
#   # light = true

# https://stackoverflow.com/questions/58816416/xcode-swift-package-manager-error-the-repository-could-not-be-found
# [url "git@github.com:"]
# 	insteadOf = https://github.com/