[user]
	name = Andrei Podkovyrin
	email = podkovyrin@gmail.com
[core]
	autocrlf = false
	editor = vim
	excludesfile = ~/.gitignore
	fsmonitor = true
	untrackedCache = true
[init]
	defaultBranch = main
[commit]
	gpgsign = true
[diff]
	# Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
	# instead of a/b/c/d as prefixes for patches
	mnemonicPrefix = true
	algorithm = histogram
	colorMoved = plain
	renames = true
[branch]
	autosetupmerge = true
	sort = -committerdate
[merge]
	summary = true
	verbosity = 1
	tool = vimdiff
	conflictstyle = diff3
[rebase]
	updateRefs = true
[rerere]
	# Remember my merges
	# http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true
	autoupdate = true
[fetch]
	prune = true
	pruneTags = true
	all = true
[pull]
	ff = only
	rebase = true
[push]
	# 'git push' will push the current branch to its tracking branch
	# the usual default is to push all branches
	default = upstream
	autoSetupRemote = true
	followTags = true
[apply]
	whitespace = nowarn
[help]
	autocorrect = prompt
[alias]
	unstage = reset HEAD              # remove files from index (tracking)
	uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
	mop = !git clean -df && git reset --hard
	nuke = !git clean -ffdx && git reset --hard
	bclean = "!f() { git branch --merged | grep  -v '\\*\\|master\\|develop\\|main\\|dev' | xargs -n 1 git branch -d; }; f"
	subs = submodule update --init --recursive
	changelog = "!f() { git log $1..HEAD --pretty=\"format:%s%n%b\" | grep changelog: | /usr/bin/sed -e \"s/^.*changelog\\://\" | awk \"{\\$1=\\$1};1\"; }; f"
	aic = "!f() { if [ -n \"$(git diff --cached)\" ]; then git commit -m \"$(git diff --cached | llm -m llama3:70b 'Below is a diff of all staged changes, coming from the command:\\n```\\ngit diff --cached\\n```\\nPlease generate a concise, one-line commit message for these changes. Omit minor changes and emphasize the most important changes. OUTPUT ONLY THE MESSAGE.')\"; else echo 'No changes to commit'; fi }; f"
	chores = !git fetch --prune && git remote prune origin && git reflog expire --expire=now --all && git gc --prune=now --aggressive && git fsck --full && git submodule foreach \"git fetch --prune && git remote prune origin && git reflog expire --expire=now --all && git gc --prune=now --aggressive && git fsck --full\"
[format]
	pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[advice]
	statusHints = false
[include]
	path = .gitconfig.user
[mergetool]
	prompt = false
[mergetool "vimdiff"]
	cmd="vim -c 'Gdiff' $MERGED"     # use fugitive.vim for 3-way merge
	keepbackup=false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[color]
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = blue
	frag = magenta bold
	old = red
	new = green
	diff = true

# git-delta config
# [core]
#   pager = delta
# [interactive]
#   diffFilter = delta --color-only
# [delta]
#   navigate = true    # use n and N to move between diff sections
#   # delta detects terminal colors automatically; set one of these to disable auto-detection
#   # dark = true
#   # light = true

# https://stackoverflow.com/questions/58816416/xcode-swift-package-manager-error-the-repository-could-not-be-found
# [url "git@github.com:"]
# 	insteadOf = https://github.com/